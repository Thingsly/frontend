export default {
  selectServices: 'Select Services',
  stepOneDescribe: 'Select the device access services you need',
  serviceConfig: 'Service Configuration',
  stepTwoDescribe: 'Verify service authorization',
  equipmentConfig: 'Device Template',
  stepThreeDescribe: 'Set whether to import and bind the device template',
  adoptDeviceAdd: 'Add via Service',
  templateInfo: 'Template Information',
  editTemplateInfo: 'Edit Template Information',
  addDeviceInfo: 'Add basic device information',
  modelDefinition: 'Model Definition',
  deviceParameterDescribe: 'Configure parameters and device type based on the system-provided model',
  webChartConfiguration: 'Web Chart Configuration',
  bindTheCorrespondingChart: 'Bind the corresponding chart',
  appChartConfiguration: 'App Chart Configuration',
  editAppDetailsPage: 'Edit the App details page for this device model',
  release: 'Release',
  releaseAppStore: 'Release to App Store',
  enterTemplateName: 'Enter template name',
  templateName: 'Template Name',
  templateTage: 'Template Tag',
  authorName: 'Author Name',
  enterAuthorName: 'Enter author name',
  templateVersion: 'Template Version',
  entertemplateVersion: 'Enter template version',
  illustrate: 'Description',
  enterIllustrate: 'Enter description',
  selectCover: 'Select Cover',
  nextStep: 'Next Step',
  back: 'Back',
  confirm: 'Confirm',
  addTage: 'Add Tag',
  add: 'Add',
  telemetry: 'Telemetry',
  attributes: 'Attributes',
  events: 'Events',
  command: 'Command',
  addAndEditTelemetry: 'Add/Edit Telemetry',
  addAndEditAttributes: 'Add/Edit Attributes',
  addAndEditEvents: 'Add/Edit Events',
  addAndEditCommand: 'Add/Edit Command',
  setEnumItem: 'Set Enum Item',
  enumValue: 'Enum Value',
  enumDesc: 'Enum Description',
  addEnumItem: 'Add Enum Item',
  home: {
    title: 'Device Template',
    description: 'Manage device templates and configurations',
    refresh: 'Refresh',
    kanbanNameNull: 'Template name cannot be empty'
  },
  groupPage: {
    deviceNumberMax: 'Maximum number of devices reached',
    deviceNumberNotAvailable: 'Device number not available',
    deviceAvailable: 'Available Devices',
    groupName: 'Group Name',
    description: 'Description',
    createdAt: 'Created At',
    actions: 'Actions',
    view: 'View',
    confirmDelete: 'Confirm Delete',
    delete: 'Delete',
    removeFromGroup: 'Remove from Group',
    createGroupButton: 'Create Group',
    deviceGroupPlaceholder: 'Select device group',
    selectParentGroup: 'Select Parent Group',
    enterGroupName: 'Enter group name',
    group: 'Group',
    addGroup: 'Add Group',
    editGroup: 'Edit Group',
    confirm: 'Confirm',
    cancel: 'Cancel',
    modificationSuccess: 'Modification Success',
    additionSuccess: 'Addition Success'
  },
  devicePage: {
    maintenance: 'Maintenance',
    attributeDistribution: 'Attribute Distribution',
    attributeReporting: 'Attribute Reporting',
    transmissionPreprocessing: 'Transmission Preprocessing',
    reportPreprocessing: 'Report Preprocessing',
    commandDeliveryPreprocessing: 'Command Delivery Preprocessing',
    eventReportPreprocessing: 'Event Report Preprocessing',
    pushTime: 'Push Time',
    handle: 'Handle',
    deviceNumberMax: 'Maximum number of devices reached',
    deviceNumberNotAvailable: 'Device number not available',
    subDeviceAddress: 'Sub Device Address',
    deviceKey: 'Device Key',
    deviceName: 'Device Name',
    deviceNumber: 'Device Number',
    deviceConfig: 'Device Configuration',
    configTemplate: 'Configuration Template',
    unlimitedDeviceConfig: 'Unlimited Device Configuration',
    selectGroup: 'Select Group',
    online: 'Online',
    offline: 'Offline',
    alarmed: 'Alarmed',
    notAlarmed: 'Not Alarmed',
    lastPushTime: 'Last Push Time',
    serviceProtocol: 'Service Protocol',
    details: 'Details',
    delete: 'Delete',
    group: 'Group',
    unlimitedOnlineStatus: 'Unlimited Online Status',
    unlimitedAlarmStatus: 'Unlimited Alarm Status',
    alarm: 'Alarm',
    noAlarm: 'No Alarm',
    unlimitedAccessType: 'Unlimited Access Type',
    directConnectedDevices: 'Direct Connected Devices',
    gateway: 'Gateway',
    gatewaySubEquipment: 'Gateway Sub Equipment',
    unlimitedAccessMode: 'Unlimited Access Mode',
    byProtocol: 'By Protocol',
    byService: 'By Service',
    deviceNameOrNumber: 'Device Name or Number',
    manualAdd: 'Manual Add',
    addByNumber: 'Add by Number',
    addByServer: 'Add by Server',
    addDevice: 'Add Device',
    createDevice: 'Create Device',
    configureDevice: 'Configure Device',
    configurationComplete: 'Configuration Complete',
    enterDeviceNumber: 'Enter device number',
    deviceNumberAvailable: 'Device number available',
    finish: 'Finish',
    onlineStatus: 'Online Status',
    alarmStatus: 'Alarm Status',
    accessServiceProtocol: 'Access Service Protocol',
    onlineOption: 'Online Option',
    offlineOption: 'Offline Option',
    alarmOption: 'Alarm Option',
    noAlarmOption: 'No Alarm Option',
    step1Title: 'Step 1',
    tips: 'Tips',
    step1Desc: 'Step 1 Description',
    step2Title: 'Step 2',
    step2Desc: 'Step 2 Description',
    step3Title: 'Step 3',
    step3Desc: 'Step 3 Description',
    serverStep1Title: 'Server Step 1',
    serverStep1Desc: 'Server Step 1 Description',
    serverStep2Title: 'Server Step 2',
    serverStep2Desc: 'Server Step 2 Description',
    enterDeviceName: 'Enter device name',
    validationFailed: 'Validation Failed',
    label: 'Label',
    selectDeviceConfig: 'Select device configuration',
    inputDeviceName: 'Input device name',
    submit: 'Submit',
    connectInfo: 'Connection Info',
    success: 'Success',
    deviceConfigSuccess: 'Device configuration success',
    close: 'Close',
    fail: 'Fail',
    deviceConfigFail: 'Device configuration failed',
    back: 'Back',
    saveAndNext: 'Save and Next'
  },
  grouping_details: {
    messageId: 'Message ID',
    sendContent: 'Send Content',
    previousPage: 'Previous Page',
    previousLevel: 'Previous Level',
    backToGroupList: 'Back to Group List',
    groupLevel: 'Group Level',
    groupId: 'Group ID',
    description: 'Description',
    createTime: 'Create Time',
    subGroup: 'Sub Group',
    addSubGroup: 'Add Sub Group',
    device: 'Device',
    addDeviceToGroup: 'Add Device to Group',
    detail: 'Detail',
    basic: 'Basic',
    setting: 'Setting',
    edit: 'Edit',
    noGroupId: 'No Group ID',
    operationSuccess: 'Operation Success',
    operationFail: 'Operation Fail',
    cancel: 'Cancel',
    confirm: 'Confirm'
  },
  device_details: {
    sendTime: 'Send Time',
    titleOrContent: 'Title or Content',
    notificationType: 'Notification Type',
    attributeDistributionTime: 'Attribute Distribution Time',
    messageId: 'Message ID',
    sendContent: 'Send Content',
    triggerOperation: 'Trigger Operation',
    whole: 'Whole',
    command: 'Command',
    sendResults: 'Send Results',
    automaticTriggering: 'Automatic Triggering',
    manualOperation: 'Manual Operation',
    history: 'History',
    sequential: 'Sequential',
    deleteAttribute: 'Delete Attribute',
    sendInputData: 'Send Input Data',
    operationTime: 'Operation Time',
    operationUsers: 'Operation Users',
    operationType: 'Operation Type',
    telemetry: 'Telemetry',
    join: 'Join',
    deviceAnalysis: 'Device Analysis',
    chart: 'Chart',
    AdditionalDetails: 'Additional Details',
    message: 'Message',
    attributes: 'Attributes',
    eventReport: 'Event Report',
    commandDelivery: 'Command Delivery',
    expectMessage: 'Expect Message',
    automate: 'Automate',
    giveAnAlarm: 'Give an Alarm',
    user: 'User',
    settings: 'Settings',
    deviceNumber: 'Device Number',
    deviceConfig: 'Device Configuration',
    status: 'Status',
    online: 'Online',
    offline: 'Offline',
    alarm: 'Alarm',
    noAlarm: 'No Alarm',
    lastUpdate: 'Last Update'
  },
  configEdit: {
    title: 'Configuration Edit',
    description: 'Edit device configuration'
  },
  table_header: {
    eventContent: 'Event Content',
    dataName: 'Data Name',
    dataIdentifier: 'Data Identifier',
    readAndWriteSign: 'Read/Write Flag',
    readAndWrite: 'Read/Write',
    readOnly: 'Read Only',
    dataType: 'Data Type',
    unit: 'Unit',
    pleaseEnterTheUnit: 'Please enter the unit',
    PleaseEnterADescription: 'Please enter a description',
    description: 'Description',
    eventReportingTime: 'Event Reporting Time',
    attributeName: 'Attribute Name',
    updateTime: 'Update Time',
    attributeValue: 'Attribute Value',
    attributeIdentifier: 'Attribute Identifier',
    eventName: 'Event Name',
    eventIdentifier: 'Event Identifier',
    eventParameters: 'Event Parameters',
    commandName: 'Command Name',
    commandIdentifier: 'Command Identifier',
    commandParameters: 'Command Parameters',
    pleaseEnterADataName: 'Please enter a data name',
    pleaseEnterTheDataIdentifier: 'Please enter the data identifier',
    pleaseEnterTheDataType: 'Please enter the data type',
    pleaseEnterTheAttributeName: 'Please enter the attribute name',
    pleaseEnterTheAttributeIdentifier: 'Please enter the attribute identifier',
    pleaseEnterTheAttributeType: 'Please enter the attribute type',
    attributeType: 'Attribute Type',
    addEditParameters: 'Add/Edit Parameters',
    parameterName: 'Parameter Name',
    PleaseEnterTheParameterName: 'Please enter the parameter name',
    ParameterIdentifier: 'Parameter Identifier',
    PleaseEnterTheParameterIdentifier: 'Please enter the parameter identifier',
    ParameterType: 'Parameter Type',
    PleaseSelectParameterType: 'Please select parameter type',
    singleControlTask: 'Single Control Task',
    addParameters: 'Add Parameters',
    commandDescription: 'Command Description',
    pleaseEnterACommandDescription: 'Please enter a command description',
    pleaseEnterTheCommandName: 'Please enter the command name',
    pleaseEnterTheCommandIdentifier: 'Please enter the command identifier',
    PleaseEnterTheCommandType: 'Please enter the command type',
    eventDescription: 'Event Description',
    PleaseEventDescription: 'Please enter event description',
    singleControlTaskl: 'Single Control Task', // Note: Original key ends with 'l'
    PleaseEventName: 'Please enter event name',
    PleaseEeventIdentifier: 'Please enter event identifier', // Note: Original key has typo 'Eevent'
    setEnum: 'Set Enum Item',
    addEnum: 'Add Enum Item',
    enumDataType: 'Enum Data Type',
    enumDataValue: 'Enum Value',
    enumDescription: 'Enum Description'
  }
};
